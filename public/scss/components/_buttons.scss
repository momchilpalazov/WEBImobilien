@use "sass:color";
@use "sass:math";
@use '../variables' as *;
@use '../mixins' as *;

// Button Base
.btn {
  display: inline-block;
  font-weight: 400;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  user-select: none;
  border: $border-width solid transparent;
  padding: .375rem .75rem;
  font-size: $font-size-base;
  line-height: $line-height-base;
  border-radius: $border-radius;
  transition: color .15s ease-in-out,
              background-color .15s ease-in-out,
              border-color .15s ease-in-out,
              box-shadow .15s ease-in-out;

  &:focus,
  &.focus {
    outline: 0;
    box-shadow: 0 0 0 .2rem rgba($primary, .25);
  }

  &:disabled,
  &.disabled {
    opacity: .65;
    pointer-events: none;
  }
}

// Button Variants
@mixin button-variant($background, $border, $hover-background: color.adjust($background, $lightness: -7.5%), $hover-border: color.adjust($border, $lightness: -10%), $active-background: color.adjust($background, $lightness: -10%), $active-border: color.adjust($border, $lightness: -12.5%)) {
  color: color-contrast($background);
  background-color: $background;
  border-color: $border;

  &:hover {
    color: color-contrast($hover-background);
    background-color: $hover-background;
    border-color: $hover-border;
  }

  &:focus,
  &.focus {
    color: color-contrast($hover-background);
    background-color: $hover-background;
    border-color: $hover-border;
    box-shadow: 0 0 0 .2rem rgba($background, .5);
  }

  &:active,
  &.active {
    color: color-contrast($active-background);
    background-color: $active-background;
    border-color: $active-border;

    &:focus {
      box-shadow: 0 0 0 .2rem rgba($background, .5);
    }
  }
}

// Color function
@function color-contrast($background) {
  $r: color.channel($background, "red");
  $g: color.channel($background, "green");
  $b: color.channel($background, "blue");
  
  $yiq: math.div(($r * 299) + ($g * 587) + ($b * 114), 1000);
  
  @return if($yiq >= 150, $dark, $light);
}

// Generate button variants
.btn-primary { @include button-variant($primary, $primary); }
.btn-secondary { @include button-variant($secondary, $secondary); }
.btn-success { @include button-variant($success, $success); }
.btn-info { @include button-variant($info, $info); }
.btn-warning { @include button-variant($warning, $warning); }
.btn-danger { @include button-variant($danger, $danger); }
.btn-light { @include button-variant($light, $light); }
.btn-dark { @include button-variant($dark, $dark); }

// Outline buttons
@mixin button-outline-variant($color) {
  color: $color;
  border-color: $color;
  background-color: transparent;

  &:hover {
    color: color-contrast($color);
    background-color: $color;
    border-color: $color;
  }

  &:focus,
  &.focus {
    box-shadow: 0 0 0 .2rem rgba($color, .5);
  }

  &:active,
  &.active {
    color: color-contrast($color);
    background-color: $color;
    border-color: $color;
  }
}

// Generate outline button variants
.btn-outline-primary { @include button-outline-variant($primary); }
.btn-outline-secondary { @include button-outline-variant($secondary); }
.btn-outline-success { @include button-outline-variant($success); }
.btn-outline-info { @include button-outline-variant($info); }
.btn-outline-warning { @include button-outline-variant($warning); }
.btn-outline-danger { @include button-outline-variant($danger); }
.btn-outline-light { @include button-outline-variant($light); }
.btn-outline-dark { @include button-outline-variant($dark); }

// Button sizes
.btn-lg {
  padding: .5rem 1rem;
  font-size: $font-size-base * 1.25;
  border-radius: $border-radius * 1.2;
}

.btn-sm {
  padding: .25rem .5rem;
  font-size: $font-size-base * .875;
  border-radius: $border-radius * .8;
}

// Block button
.btn-block {
  display: block;
  width: 100%;

  + .btn-block {
    margin-top: .5rem;
  }
} 